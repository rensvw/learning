{"version":3,"sources":["../gulpfile.js"],"names":["gulp","require","babel","gutil","jshint","sass","sourcemaps","clean","uglify","concat","filesize","plumber","task","src","read","pipe","init","presets","env","type","noop","write","dest","on","log","reporter","watch"],"mappings":";;AAAA;;AAEA;AACA,IAAIA,OAASC,QAAQ,MAAR,CAAb;AAAA,IACIC,QAAQD,QAAQ,YAAR,CADZ;AAAA,IAEIE,QAAQF,QAAQ,WAAR,CAFZ;AAAA,IAGIG,SAASH,QAAQ,aAAR,CAHb;AAAA,IAIII,OAASJ,QAAQ,WAAR,CAJb;AAAA,IAKIK,aAAaL,QAAQ,iBAAR,CALjB;AAAA,IAMIM,QAAQN,QAAQ,YAAR,CANZ;AAAA,IAOIO,SAASP,QAAQ,aAAR,CAPb;AAAA,IAQIQ,SAASR,QAAQ,aAAR,CARb;AAAA,IASIS,WAAWT,QAAQ,eAAR,CATf;AAAA,IAUIU,UAAUV,QAAQ,cAAR,CAVd;;AAcA;AACAD,KAAKY,IAAL,CAAU,SAAV,EAAqB,CAAC,OAAD,CAArB;;AAEAZ,KAAKY,IAAL,CAAU,OAAV,EAAmB,YAAY;AAC3B,WAAOZ,KAAKa,GAAL,CAAS,2BAAT,EAAsC,EAACC,MAAM,KAAP,EAAtC,EACFC,IADE,CACGR,OADH,CAAP;AAEH,CAHD;;AAMAP,KAAKY,IAAL,CAAU,UAAV,EAAsB,YAAW;AAC7B,WAAOZ,KAAKa,GAAL,CAAS,2BAAT,EACFE,IADE,CACGJ,SADH,EAEFI,IAFE,CAEGT,WAAWU,IAAX,EAFH,EAGFD,IAHE,CAGGb,MAAM;AACRe,iBAAS,CAAC,QAAD;AADD,KAAN,CAHH,EAMFF,IANE,CAMGN,OAAO,WAAP,CANH,EAOFM,IAPE,CAOGL,UAPH;AAQH;AARG,KASFK,IATE,CASGZ,MAAMe,GAAN,CAAUC,IAAV,KAAmB,YAAnB,GAAkCX,QAAlC,GAA6CL,MAAMiB,IAAN,EAThD,EAUFL,IAVE,CAUGT,WAAWe,KAAX,EAVH,EAWFN,IAXE,CAWGf,KAAKsB,IAAL,CAAU,0BAAV,CAXH,EAYFP,IAZE,CAYGL,UAZH,EAcFa,EAdE,CAcC,OAdD,EAcUpB,MAAMqB,GAdhB,CAAP;AAeH,CAhBD;;AAkBA;;;;;;;;AAQA;AACAxB,KAAKY,IAAL,CAAU,QAAV,EAAoB,YAAW;AAC3B,WAAOZ,KAAKa,GAAL,CAAS,2BAAT,EACFE,IADE,CACGX,QADH,EAEFW,IAFE,CAEGX,OAAOqB,QAAP,CAAgB,gBAAhB,CAFH,CAAP;AAGH,CAJD;;AAMA;AACAzB,KAAKY,IAAL,CAAU,OAAV,EAAmB,YAAW;AAC1BZ,SAAK0B,KAAL,CAAW,2BAAX,EAAwC,CAAC,QAAD,EAAU,UAAV,CAAxC;AACA;AACH,CAHD","file":"gulpfile.js","sourcesContent":["/* File: gulpfile.js */\n\n// grab our packages\nvar gulp   = require('gulp'),\n    babel = require('gulp-babel'),\n    gutil = require('gulp-util'),\n    jshint = require('gulp-jshint'),\n    sass   = require('gulp-sass'),\n    sourcemaps = require('gulp-sourcemaps'),\n    clean = require('gulp-clean'),\n    uglify = require('gulp-uglify'),\n    concat = require('gulp-concat'),\n    filesize = require('gulp-filesize'),\n    plumber = require('gulp-plumber');\n\n\n\n// define the default task and add the watch task to it\ngulp.task('default', ['watch']);\n\ngulp.task('clean', function () {\n    return gulp.src('public/javascript/**/*.js', {read: false})\n        .pipe(clean());\n});\n\n\ngulp.task('build-js', function() {\n    return gulp.src('source/javascript/**/*.js')\n        .pipe(plumber())\n        .pipe(sourcemaps.init())\n        .pipe(babel({\n            presets: ['es2015']\n        }))\n        .pipe(concat('bundle.js'))\n        .pipe(filesize())\n        //only uglify if gulp is ran with '--type production'\n        .pipe(gutil.env.type === 'production' ? uglify() : gutil.noop())\n        .pipe(sourcemaps.write())\n        .pipe(gulp.dest('public/assets/javascript'))\n        .pipe(filesize())\n\n        .on('error', gutil.log);\n});\n\n/*gulp.task('build-css', function() {\n    return gulp.src('source/scss/!**!/!*.scss')\n        .pipe(sourcemaps.init())  // Process the original sources\n        .pipe(sass())\n        .pipe(sourcemaps.write()) // Add the map to modified source.\n        .pipe(gulp.dest('public/assets/stylesheets'));\n});*/\n\n// configure the jshint task\ngulp.task('jshint', function() {\n    return gulp.src('source/javascript/**/*.js')\n        .pipe(jshint())\n        .pipe(jshint.reporter('jshint-stylish'));\n});\n\n// configure which files to watch and what tasks to use on file changes\ngulp.task('watch', function() {\n    gulp.watch('source/javascript/**/*.js', ['jshint','build-js']);\n    //gulp.watch('source/scss/**/*.scss', ['build-css']);\n});"]}